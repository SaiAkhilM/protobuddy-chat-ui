services:
  # Backend API Service
  - type: web
    name: protobuddy-backend
    env: node
    buildCommand: cd backend && npm ci && npm run build
    startCommand: cd backend && node dist/index.js
    plan: starter
    region: oregon
    branch: main
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3001
      - key: DATABASE_URL
        fromDatabase:
          name: protobuddy-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: protobuddy-redis
          property: connectionString
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: APIFY_API_TOKEN
        sync: false
      - key: CORS_ORIGIN
        value: https://protobuddy-frontend.onrender.com
      - key: LOG_LEVEL
        value: info
      - key: SCRAPE_DELAY_MS
        value: 2000
      - key: MAX_CONCURRENT_SCRAPES
        value: 2
    healthCheckPath: /health

  # Frontend Service
  - type: web
    name: protobuddy-frontend
    env: static
    buildCommand: npm ci && npm run build
    staticPublishPath: ./dist
    plan: starter
    region: oregon
    branch: main
    envVars:
      - key: VITE_API_BASE_URL
        value: https://protobuddy-backend.onrender.com/api
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin
      - path: /static/*
        name: Cache-Control
        value: public, max-age=31536000, immutable
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

# Database Services
databases:
  - name: protobuddy-postgres
    databaseName: protobuddy
    user: protobuddy
    plan: starter
    region: oregon
    ipAllowList: []

# Redis Service
  - name: protobuddy-redis
    plan: starter
    region: oregon
    ipAllowList: []